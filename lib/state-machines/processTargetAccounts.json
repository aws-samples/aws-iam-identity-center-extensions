{
  "Comment": "State machine for organization/tag processing",
  "StartAt": "Process type",
  "States": {
    "Process type": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.entityType",
          "StringMatches": "root",
          "Next": "Call ListAccounts"
        },
        {
          "Variable": "$.entityType",
          "StringMatches": "ou_id",
          "Next": "Call ListAccountsForParent"
        },
        {
          "Variable": "$.entityType",
          "StringMatches": "account_tag",
          "Next": "call GetResources"
        }
      ],
      "Default": "No matches for entityType, so do nothing"
    },
    "call GetResources": {
      "Type": "Task",
      "Next": "Loop through all resources matching tag key value filter",
      "Parameters": {
        "ResourcesPerPage.$": "$.pageSize",
        "ResourceTypeFilters.$": "States.Array($.resourceTypeFilters)",
        "TagFilters": [
          {
            "Key.$": "$.tagKey",
            "Values.$": "States.Array($.tagValues)"
          }
        ]
      },
      "Resource": "arn:aws:states:::aws-sdk:resourcegroupstaggingapi:getResources",
      "ResultPath": "$.getResources",
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "BackoffRate": 1.5,
          "IntervalSeconds": 2,
          "MaxAttempts": 2
        }
      ]
    },
    "Loop through all resources matching tag key value filter": {
      "Type": "Map",
      "Iterator": {
        "StartAt": "Publish getResources to SNS topic",
        "States": {
          "Publish getResources to SNS topic": {
            "Type": "Task",
            "Resource": "arn:aws:states:::sns:publish",
            "Parameters": {
              "Message.$": "$",
              "TopicArn.$": "$.topicArn"
            },
            "Retry": [
              {
                "ErrorEquals": ["States.TaskFailed"],
                "BackoffRate": 1.5,
                "IntervalSeconds": 2,
                "MaxAttempts": 2
              }
            ],
            "End": true
          }
        }
      },
      "ItemsPath": "$.getResources.ResourceTagMappingList",
      "Parameters": {
        "entityType.$": "$.entityType",
        "action.$": "$.action",
        "topicArn.$": "$.topicArn",
        "instanceArn.$": "$.instanceArn",
        "targetType.$": "$.targetType",
        "principalType.$": "$.principalType",
        "permissionSetArn.$": "$.permissionSetArn",
        "principalId.$": "$.principalId",
        "pretargetId.$": "$$.Map.Item.Value.ResourceARN",
        "tagKey.$": "$.tagKey",
        "sourceRequestId.$": "$.sourceRequestId"
      },
      "Next": "Check for PaginationToken in GetResources response?",
      "ResultPath": "$.getResources.notifications"
    },
    "Check for PaginationToken in GetResources response?": {
      "Type": "Choice",
      "Choices": [
        {
          "And": [
            {
              "Variable": "$.getResources.PaginationToken",
              "IsPresent": true
            },
            {
              "Not": {
                "Variable": "$.getResources.PaginationToken",
                "StringEqualsPath": "$.emptyString"
              }
            }
          ],
          "Next": "Call GetResources with PaginationToken"
        }
      ],
      "Default": "Final State"
    },
    "No matches for entityType, so do nothing": {
      "Type": "Pass",
      "End": true
    },
    "Call ListAccounts": {
      "Type": "Task",
      "Parameters": {
        "MaxResults.$": "$.pageSize"
      },
      "ResultPath": "$.listRootAccounts",
      "Resource": "arn:aws:states:::aws-sdk:organizations:listAccounts",
      "Next": "Loop through all accounts in root",
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "BackoffRate": 1.5,
          "IntervalSeconds": 2,
          "MaxAttempts": 2
        }
      ]
    },
    "Call ListAccounts with NextToken": {
      "Type": "Task",
      "Parameters": {
        "MaxResults.$": "$.pageSize",
        "NextToken.$": "$.listRootAccounts.NextToken"
      },
      "ResultPath": "$.listRootAccounts",
      "Resource": "arn:aws:states:::aws-sdk:organizations:listAccounts",
      "Next": "Loop through all accounts in root",
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "BackoffRate": 1.5,
          "IntervalSeconds": 2,
          "MaxAttempts": 2
        }
      ]
    },
    "Loop through all accounts in root": {
      "Type": "Map",
      "Next": "Check for NextToken in ListAcccounts response?",
      "Iterator": {
        "StartAt": "Publish listaccounts to SNS topic",
        "States": {
          "Publish listaccounts to SNS topic": {
            "Type": "Task",
            "Resource": "arn:aws:states:::sns:publish",
            "Parameters": {
              "Message.$": "$",
              "TopicArn.$": "$.topicArn"
            },
            "Retry": [
              {
                "ErrorEquals": ["States.TaskFailed"],
                "BackoffRate": 1.5,
                "IntervalSeconds": 2,
                "MaxAttempts": 2
              }
            ],
            "End": true
          }
        }
      },
      "ItemsPath": "$.listRootAccounts.Accounts",
      "Parameters": {
        "entityType.$": "$.entityType",
        "action.$": "$.action",
        "topicArn.$": "$.topicArn",
        "instanceArn.$": "$.instanceArn",
        "targetType.$": "$.targetType",
        "principalType.$": "$.principalType",
        "permissionSetArn.$": "$.permissionSetArn",
        "principalId.$": "$.principalId",
        "pretargetId.$": "$$.Map.Item.Value.Id",
        "sourceRequestId.$": "$.sourceRequestId"
      },
      "ResultPath": "$.listRootAccounts.notifications"
    },
    "Check for NextToken in ListAcccounts response?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.listRootAccounts.NextToken",
          "IsPresent": true,
          "Next": "Call ListAccounts with NextToken"
        }
      ],
      "Default": "Final State"
    },
    "Call ListAccountsForParent": {
      "Type": "Task",
      "Parameters": {
        "MaxResults.$": "$.pageSize",
        "ParentId.$": "$.ou_id"
      },
      "Resource": "arn:aws:states:::aws-sdk:organizations:listAccountsForParent",
      "Next": "Loop through all accounts in ou_id",
      "ResultPath": "$.listAccountsForParent",
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "BackoffRate": 1.5,
          "IntervalSeconds": 2,
          "MaxAttempts": 2
        }
      ]
    },
    "Loop through all accounts in ou_id": {
      "Type": "Map",
      "Iterator": {
        "StartAt": "Publish listAccountsByParent to SNS topic",
        "States": {
          "Publish listAccountsByParent to SNS topic": {
            "Type": "Task",
            "Resource": "arn:aws:states:::sns:publish",
            "Parameters": {
              "Message.$": "$",
              "TopicArn.$": "$.topicArn"
            },
            "Retry": [
              {
                "ErrorEquals": ["States.TaskFailed"],
                "BackoffRate": 1.5,
                "IntervalSeconds": 2,
                "MaxAttempts": 2
              }
            ],
            "End": true
          }
        }
      },
      "ItemsPath": "$.listAccountsForParent.Accounts",
      "Parameters": {
        "entityType.$": "$.entityType",
        "action.$": "$.action",
        "topicArn.$": "$.topicArn",
        "instanceArn.$": "$.instanceArn",
        "targetType.$": "$.targetType",
        "principalType.$": "$.principalType",
        "permissionSetArn.$": "$.permissionSetArn",
        "principalId.$": "$.principalId",
        "pretargetId.$": "$$.Map.Item.Value.Id",
        "sourceRequestId.$": "$.sourceRequestId"
      },
      "ResultPath": "$.listAccountsForParent.notifications",
      "Next": "Check for NextToken in ListAccountsForParent response?"
    },
    "Check for NextToken in ListAccountsForParent response?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.listAccountsForParent.NextToken",
          "IsPresent": true,
          "Next": "Call ListAccountsForParent with NextToken"
        }
      ],
      "Default": "Final State"
    },
    "Final State": {
      "Type": "Pass",
      "End": true
    },
    "Call ListAccountsForParent with NextToken": {
      "Type": "Task",
      "Parameters": {
        "MaxResults.$": "$.pageSize",
        "ParentId.$": "$.ou_id",
        "NextToken.$": "$.listAccountsForParent.NextToken"
      },
      "Resource": "arn:aws:states:::aws-sdk:organizations:listAccountsForParent",
      "ResultPath": "$.listAccountsForParent",
      "Next": "Loop through all accounts in ou_id",
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "BackoffRate": 1.5,
          "IntervalSeconds": 2,
          "MaxAttempts": 2
        }
      ]
    },
    "Call GetResources with PaginationToken": {
      "Type": "Task",
      "Parameters": {
        "ResourcesPerPage.$": "$.pageSize",
        "ResourceTypeFilters.$": "States.Array($.resourceTypeFilters)",
        "TagFilters": [
          {
            "Key.$": "$.tagKey",
            "Values.$": "States.Array($.tagValues)"
          }
        ],
        "PaginationToken.$": "$.getResources.PaginationToken"
      },
      "Resource": "arn:aws:states:::aws-sdk:resourcegroupstaggingapi:getResources",
      "Next": "Loop through all resources matching tag key value filter",
      "ResultPath": "$.getResources",
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "BackoffRate": 1.5,
          "IntervalSeconds": 2,
          "MaxAttempts": 2
        }
      ]
    }
  }
}
