@startuml

title Links Life cycle with S3 interface

actor admin_user
admin_user->S3_bucket: place a file with the correct prefix and path
S3_bucket->event_notification_lambda: trigger S3 event notiifcation with change details
event_notification_lambda->event_notification_lambda: identify if the change is create/modify/delete
event_notification_lambda->links_ddb: create/update/delete the record from table
links_ddb->links_ddb_streams_handler: post change type and change details
links_ddb_streams_handler->permissionset_ddb: look up referenced permissionset arn's by matching name
permissionset_ddb->links_ddb_streams_handler: return look up result
links_ddb_streams_handler->groups_ddb: lookup group id's matching group name
groups_ddb->links_ddb_streams_handler: return look up result
links_ddb_streams_handler->links_ddb_streams_handler: determine if ou wide / org wide expansion is necessary for the link
links_ddb_streams_handler->links_manager_topic: if all conditions pass, post the link data and change type to links_manager_topic
links_manager_topic->links_manager_topic_handler: trigger the lambda with message payload
links_manager_topic_handler->links_manager_topic_handler: process createAccountAssignment , or DeleteAccountAssignment based on change type
links_manager_topic_handler->waiter_topic: post request Id to waiter
waiter_topic->waiter_topic_handler: wait for reqeust to move to success/fail/max attempt
waiter_topic_handler->provisioned_links_ddb: update/delete item as necessary

title Links Life cycle with API interface

actor admin_user
admin_user->Links_API: send the payload 
Links_API->links_ddb: create/update/delete the record from table
links_ddb->links_ddb_streams_handler: post change type and change details
links_ddb_streams_handler->permissionset_ddb: look up referenced permissionset arn's by matching name
permissionset_ddb->links_ddb_streams_handler: return look up result
links_ddb_streams_handler->groups_ddb: lookup group id's matching group name
groups_ddb->links_ddb_streams_handler: return look up result
links_ddb_streams_handler->links_ddb_streams_handler: determine if ou wide / org wide expansion is necessary for the link
links_ddb_streams_handler->links_manager_topic: if all conditions pass, post the link data and change type to links_manager_topic
links_manager_topic->links_manager_topic_handler: trigger the lambda with message payload
links_manager_topic_handler->links_manager_topic_handler: process createAccountAssignment , or DeleteAccountAssignment based on change type
links_manager_topic_handler->waiter_topic: post request Id to waiter
waiter_topic->waiter_topic_handler: wait for reqeust to move to success/fail/max attempt
waiter_topic_handler->provisioned_links_ddb: update/delete item as necessary

@enduml

