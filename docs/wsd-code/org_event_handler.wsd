@startuml 

title Org event handler

cloudwatcheventrule->cloudwatcheventrule: receive a createAccount/moveAccount event from organizations event source
cloudwatcheventrule->org_event_handler: post the event data to the org event handler
org_event_handler->org_event_handler: determine the event type

note left: Start of createAccount event type
org_event_handler->org_event_handler: determine if the event is createAccount type
org_event_handler->links_ddb: look up if there are any links with entity type = root
links_ddb->org_event_handler: return look up results
org_event_handler->org_event_handler: if the result set is not empty, loop throug the result set
org_event_handler->org_event_handler: for every item, compute the message payload
org_event_handler->links_manager_topic_handler: trigger the lambda with message payload
links_manager_topic_handler->links_manager_topic_handler: process createAccountAssignment , or DeleteAccountAssignment based on change type
links_manager_topic_handler->provisioned_links_ddb: update/delete the item as necessary
note left: End of createAccount event type
org_event_handler->org_event_handler: loop through the events in the trigger
note left: Start of moveAccount event type
org_event_handler->org_event_handler: determine if the event is moveAccount type
org_event_handler->org_event_handler: get old OU_ID and new OU_ID values
org_event_handler->links_ddb: look up if there are any links with entity type = ou_id and results matching old and new OU id's
links_ddb->org_event_handler: return look up results
org_event_handler->org_event_handler: if the result set is not empty, loop through the result set
org_event_handler->org_event_handler: for every item, compute the message payload
org_event_handler->links_manager_topic_handler: trigger the lambda with message payload
links_manager_topic_handler->links_manager_topic_handler: process createAccountAssignment , or DeleteAccountAssignment based on change type
links_manager_topic_handler->waiter_topic: post the request ID and waiter name
waiter_topic->waiter_topic_hanlder: wait until success/fail/max_attempt
waiter_topic_hanlder->provisioned_links_ddb: create/delete item as necessary


@enduml